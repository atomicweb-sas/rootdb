server {
    listen ${NGINX_FRONTEND_PORT};
    server_name ${NGINX_FRONTEND_HOST};
    return 301 https://${NGINX_FRONTEND_HOST}$request_uri;
}

server {
    listen ${NGINX_FRONTEND_PORT_SSL} ssl;
    listen [::]:${NGINX_FRONTEND_PORT_SSL} ssl;
    server_name ${NGINX_FRONTEND_HOST};

    root /var/www/frontend/;
    index index.html;

    ssl_certificate           /etc/nginx/ssl/${NGINX_SSL_CERTIFICATE};
    ssl_certificate_key       /etc/nginx/ssl/${NGINX_SSL_CERTIFICATE_KEY};

    ssl_session_timeout       30m;

    ssl_protocols             TLSv1.2;
    ssl_ciphers               DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:EDH-RSA-DES-CBC3-SHA:AES256-SHA:DES-CBC3-SHA:AES128-SHA:RC4-SHA:RC4-MD5;
    ssl_prefer_server_ciphers on;

    #error_log /var/log/nginx/rootdb-frontend-react.${NGINX_FRONTEND_HOST}.error.log;
    #access_log /var/log/nginx/rootdb-frontend-react.${NGINX_FRONTEND_HOST}.access.log;
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    large_client_header_buffers 4 32k;

    location ~ ^.*fonts\/(.*)$ {
        resolver            127.0.0.11;
        add_header          Access-Control-Allow-Origin *;
        proxy_pass          http://${NGINX_API_HOST}:8090/api/theme/fonts/$1;
        proxy_http_version  1.1;
        # Cause an infinite loop if activated.
        #proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    X-NginX-Proxy       true;
        proxy_set_header    Upgrade             $http_upgrade;
        proxy_set_header    Connection          "upgrade";
    }

    location / {
            try_files $uri @index;
    }

    location @index {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        expires 0;
        try_files /index.html =404;
    }
}

